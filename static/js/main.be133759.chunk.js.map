{"version":3,"sources":["components/Nominations/Nominations.jsx","components/SearchResults/SearchResults.jsx","components/SearchBar/SearchBar.jsx","pages/ResultsPage/ResultsPage.jsx","pages/HomePage/HomePage.jsx","components/Banner/Banner.jsx","pages/ResultsPageMobile/ResultsPageMobile.jsx","pages/App/App.js","reportWebVitals.js","index.js"],"names":["Nominations","props","handleSubmit","e","preventDefault","setNominated","nominated","filter","movie","imdbID","target","value","className","map","src","Poster","alt","onSubmit","type","name","Title","Year","uuidv4","SearchResults","addNomination","movieId","a","fetch","BASE_URL","response","ok","console","log","json","checkIfNominated","i","length","handleScroll","document","getElementById","offsetHeight","scrollTop","scrollHeight","setIsChangingPage","useEffect","addEventListener","id","search","result","disabled","isGetMovie","SearchBar","useState","searchInput","setSearchInput","setSearch","setIsSearching","isSearching","width","height","viewBox","fill","xmlns","d","onChange","placeholder","ResultsPage","getMovie","setResult","setPage","page","setIsFetching","HomePage","Banner","ResultsPageMobile","showNomination","setShowNomination","onClick","App","setIsGetMovie","isFetching","isChangingPage","isMobile","useMediaQuery","maxWidth","searchResult","Response","concat","Search","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.be133759.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Nominations.css\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nfunction Nominations(props) {\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.setNominated(\n      props.nominated.filter((movie) => movie.imdbID !== e.target.movie.value)\n    );\n  };\n\n  return (\n    <div className=\"Nominations\">\n      <h2>Nominations</h2>\n      <div className=\"nomination-container\">\n        {props.nominated.map((movie) => (\n          <div className=\"movie-container\" key={uuidv4()}>\n            <div className=\"image-container\">\n              <img src={movie.Poster} alt=\"NOT AVAILABLE\" />\n            </div>\n            <div className=\"movie-details-container\">\n              <form onSubmit={handleSubmit}>\n                <input type=\"hidden\" value={movie.imdbID} name=\"movie\" />\n                <p>\n                  {movie.Title} ({movie.Year})\n                </p>\n                <div className=\"nominate-button-container\">\n                  <button>Remove</button>\n                </div>\n              </form>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Nominations;\n","import React, { useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./SearchResults.css\";\n\nfunction SearchResults(props) {\n  const BASE_URL = \"https://www.omdbapi.com/?apikey=f724aaa&type=movie&\";\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    addNomination(e.target.movie.value);\n  };\n\n  const addNomination = async (movieId) => {\n    try {\n      let response = await fetch(BASE_URL + \"i=\" + movieId);\n      if (!response.ok) {\n        console.log(\"bad fetch!\");\n      }\n      let movie = await response.json();\n      props.setNominated([...props.nominated, movie]);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const checkIfNominated = (movieId) => {\n    for (let i = 0; i < props.nominated.length; i++) {\n      if (props.nominated[i].imdbID === movieId) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  const handleScroll = () => {\n    if (\n      document.getElementById(\"searchresults\").offsetHeight +\n        document.getElementById(\"searchresults\").scrollTop !==\n        document.getElementById(\"searchresults\").scrollHeight ||\n      document.getElementById(\"searchresults\").scrollTop === 0\n    )\n      return;\n    props.setIsChangingPage(true);\n  };\n\n  useEffect(() => {\n    document\n      .getElementById(\"searchresults\")\n      .addEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  return (\n    <div className=\"SearchResults\" id=\"searchresults\">\n      <h2>\n        Results for \"<span>{props.search}</span>\"...\n      </h2>\n      {props.result.length > 0 ? (\n        <div className=\"movies-container\">\n          {props.result.map((movie) => (\n            <div className=\"movie-container\" key={uuidv4()}>\n              <div className=\"image-container\">\n                <img src={movie.Poster} alt=\"NOT AVAILABLE\" />\n              </div>\n              <div className=\"movie-details-container\">\n                <form onSubmit={handleSubmit}>\n                  <input type=\"hidden\" value={movie.imdbID} name=\"movie\" />\n                  <p>\n                    {movie.Title} ({movie.Year})\n                  </p>\n                  <div className=\"nominate-button-container\">\n                    {checkIfNominated(movie.imdbID) ? (\n                      <p>Already Nominated</p>\n                    ) : props.nominated.length >= 5 ? (\n                      <button id=\"disable-button\" disabled>\n                        Nominate\n                      </button>\n                    ) : (\n                      <button>Nominate</button>\n                    )}\n                  </div>\n                </form>\n              </div>\n            </div>\n          ))}\n        </div>\n      ) : props.isGetMovie ? (\n        <div className=\"loading-container\">\n          <p className=\"loading\">Loading...</p>\n        </div>\n      ) : (\n        <p className=\"no-results\">There are no results!</p>\n      )}\n    </div>\n  );\n}\n\nexport default SearchResults;\n","import React, { useState } from \"react\";\nimport \"./SearchBar.css\";\n\nfunction SearchBar(props) {\n  const [searchInput, setSearchInput] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.setSearch(searchInput);\n    props.setIsSearching(!props.isSearching);\n  };\n\n  const handleSearchChange = (e) => {\n    setSearchInput(e.target.value);\n  };\n\n  return (\n    <div className=\"SearchBar\">\n      <div className=\"search-input-container\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"search-image-container\">\n            <button>\n              <svg\n                width=\"20\"\n                height=\"20\"\n                viewBox=\"0 0 20 20\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path d=\"M14.2939 12.5786H13.3905L13.0703 12.2699C14.191 10.9663 14.8656 9.27387 14.8656 7.43282C14.8656 3.32762 11.538 0 7.43282 0C3.32762 0 0 3.32762 0 7.43282C0 11.538 3.32762 14.8656 7.43282 14.8656C9.27387 14.8656 10.9663 14.191 12.2699 13.0703L12.5786 13.3905V14.2939L18.2962 20L20 18.2962L14.2939 12.5786V12.5786ZM7.43282 12.5786C4.58548 12.5786 2.28702 10.2802 2.28702 7.43282C2.28702 4.58548 4.58548 2.28702 7.43282 2.28702C10.2802 2.28702 12.5786 4.58548 12.5786 7.43282C12.5786 10.2802 10.2802 12.5786 7.43282 12.5786Z\" />\n              </svg>\n            </button>\n          </div>\n          <input\n            type=\"text\"\n            onChange={handleSearchChange}\n            placeholder=\"Search for a movie...\"\n            value={searchInput}\n          />\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default SearchBar;\n","import React from \"react\";\nimport \"./ResultsPage.css\";\nimport Nominations from \"../../components/Nominations/Nominations\";\nimport SearchResults from \"../../components/SearchResults/SearchResults\";\nimport SearchBar from \"../../components/SearchBar/SearchBar\";\n\nfunction ResultsPage(props) {\n  return (\n    <div className=\"ResultsPage\">\n      <p className=\"title\">\n        The <span>Shoppies</span> 🎉\n      </p>\n      <SearchBar\n        getMovie={props.getMovie}\n        search={props.search}\n        setSearch={props.setSearch}\n        setResult={props.setResult}\n        result={props.result}\n        setPage={props.setPage}\n        isSearching={props.isSearching}\n        setIsSearching={props.setIsSearching}\n      />\n      <div className=\"results-container\">\n        <SearchResults\n          result={props.result}\n          search={props.search}\n          nominated={props.nominated}\n          setNominated={props.setNominated}\n          setPage={props.setPage}\n          page={props.page}\n          getMovie={props.getMovie}\n          setIsFetching={props.setIsFetching}\n          setIsChangingPage={props.setIsChangingPage}\n          isGetMovie={props.isGetMovie}\n        />\n        <Nominations\n          nominated={props.nominated}\n          setNominated={props.setNominated}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default ResultsPage;\n","import React from \"react\";\nimport \"./HomePage.css\";\nimport SearchBar from \"../../components/SearchBar/SearchBar\";\n\nfunction HomePage(props) {\n  return (\n    <div className=\"HomePage\">\n      <p className=\"title\">\n        The <span>Shoppies</span> 🎉\n      </p>\n      <SearchBar\n        setResult={props.setResult}\n        getMovie={props.getMovie}\n        search={props.search}\n        setSearch={props.setSearch}\n        setPage={props.setPage}\n        isSearching={props.isSearching}\n        setIsSearching={props.setIsSearching}\n      />\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React from \"react\";\nimport \"./Banner.css\";\n\nfunction Banner(props) {\n  return (\n    <div className=\"Banner\">\n      <p>\n        You have reached your limit of 5 nominations! Remove nominations to\n        nominate other movies!\n      </p>\n    </div>\n  );\n}\n\nexport default Banner;\n","import React, { useState } from \"react\";\nimport \"./ResultsPageMobile.css\";\nimport Nominations from \"../../components/Nominations/Nominations\";\nimport SearchResults from \"../../components/SearchResults/SearchResults\";\nimport SearchBar from \"../../components/SearchBar/SearchBar\";\n\nfunction ResultsPageMobile(props) {\n  const [showNomination, setShowNomination] = useState(false);\n\n  const handleOnClick = () => {\n    setShowNomination(!showNomination);\n  };\n\n  return (\n    <div className=\"ResultsPageMobile\">\n      <p className=\"title\">\n        The <span>Shoppies</span> 🎉\n      </p>\n      <SearchBar\n        getMovie={props.getMovie}\n        search={props.search}\n        setSearch={props.setSearch}\n        setResult={props.setResult}\n        result={props.result}\n        setPage={props.setPage}\n        isSearching={props.isSearching}\n        setIsSearching={props.setIsSearching}\n      />\n      <div className=\"results-container\">\n        {showNomination ? (\n          <Nominations\n            nominated={props.nominated}\n            setNominated={props.setNominated}\n          />\n        ) : (\n          <SearchResults\n            result={props.result}\n            search={props.search}\n            nominated={props.nominated}\n            setNominated={props.setNominated}\n            setPage={props.setPage}\n            page={props.page}\n            getMovie={props.getMovie}\n            setIsFetching={props.setIsFetching}\n            setIsChangingPage={props.setIsChangingPage}\n            isGetMovie={props.isGetMovie}\n          />\n        )}\n      </div>\n      <div className=\"mobile-show-nomination\">\n        <button onClick={handleOnClick}>\n          {showNomination ? \"Search Results\" : \"Nominations\"}\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default ResultsPageMobile;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport ResultsPage from \"../ResultsPage/ResultsPage\";\nimport HomePage from \"../HomePage/HomePage\";\nimport Banner from \"../../components/Banner/Banner\";\nimport ResultsPageMobile from \"../ResultsPageMobile/ResultsPageMobile\";\nimport { useMediaQuery } from \"react-responsive\";\n\nconst BASE_URL = \"https://www.omdbapi.com/?apikey=f724aaa&type=movie&\";\n\nfunction App() {\n  const [search, setSearch] = useState(null);\n  const [result, setResult] = useState([]);\n  const [nominated, setNominated] = useState([]);\n  const [page, setPage] = useState(1);\n  const [isSearching, setIsSearching] = useState(false);\n  const [isGetMovie, setIsGetMovie] = useState(false);\n  const [isFetching, setIsFetching] = useState(false);\n  const [isChangingPage, setIsChangingPage] = useState(false);\n\n  const isMobile = useMediaQuery({ maxWidth: 695 });\n\n  const getMovie = async () => {\n    try {\n      let response = await fetch(BASE_URL + \"s=\" + search + \"&page=\" + page);\n      if (!response.ok) {\n        console.log(\"fetch error!\");\n      }\n      let searchResult = await response.json();\n      if (searchResult.Response === \"True\") {\n        setResult(result.concat(searchResult.Search));\n      }\n      if (isGetMovie) {\n        setIsGetMovie(false);\n      }\n      if (isFetching) {\n        setIsFetching(false);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    if (!isSearching) return;\n    setPage(1);\n    setResult([]);\n    setIsGetMovie(!isGetMovie);\n  }, [isSearching]);\n\n  useEffect(() => {\n    if (!isGetMovie) return;\n    getMovie();\n    setIsSearching(false);\n  }, [isGetMovie]);\n\n  useEffect(() => {\n    if (!isChangingPage) return;\n    setPage(page + 1);\n    setIsFetching(true);\n    setIsChangingPage(false);\n  }, [isChangingPage]);\n\n  useEffect(() => {\n    if (!isFetching) return;\n    getMovie();\n  }, [isFetching]);\n\n  return (\n    <div className=\"App\">\n      {nominated.length >= 5 && <Banner />}\n      {search === null ? (\n        <HomePage\n          getMovie={getMovie}\n          setSearch={setSearch}\n          search={search}\n          setResult={setResult}\n          setPage={setPage}\n          isSearching={isSearching}\n          setIsSearching={setIsSearching}\n        />\n      ) : isMobile ? (\n        <ResultsPageMobile\n          getMovie={getMovie}\n          setSearch={setSearch}\n          search={search}\n          result={result}\n          setNominated={setNominated}\n          nominated={nominated}\n          setPage={setPage}\n          page={page}\n          setResult={setResult}\n          isSearching={isSearching}\n          setIsSearching={setIsSearching}\n          setIsFetching={setIsFetching}\n          setIsChangingPage={setIsChangingPage}\n          isGetMovie={isGetMovie}\n        />\n      ) : (\n        <ResultsPage\n          getMovie={getMovie}\n          setSearch={setSearch}\n          search={search}\n          result={result}\n          setNominated={setNominated}\n          nominated={nominated}\n          setPage={setPage}\n          page={page}\n          setResult={setResult}\n          isSearching={isSearching}\n          setIsSearching={setIsSearching}\n          setIsChangingPage={setIsChangingPage}\n          isGetMovie={isGetMovie}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./pages/App/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}